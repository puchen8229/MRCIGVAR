% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CIVAR_d.r
\name{CIVARTest}
\alias{CIVARTest}
\title{Test of restrictions in the cointegration space and estimation of restricted VECM}
\usage{
CIVARTest(res = res, H = H, h = h, phi = phi, G = G, Dxflag = 0)
}
\arguments{
\item{res}{an estimated CIVAR object with without restrictions}

\item{H}{the restriction matrix on beta}

\item{h}{the restriction vector on beta ( free-varying parameters of beta )}

\item{phi}{the restriction vector on beta}

\item{G}{the restriction matrix on alpha}

\item{Dxflag}{A flag that indicates whether X enters the cointegration space.}
}
\value{
a list containing (VECMRS, beter, alphae, LSKOEFR, LR and error)
}
\description{
This function estimates constrained VECM using the iteration procedure proposed in Boswijk and Doornik (2003)
}
\section{Details}{

This function runs a likelihood ratio test of linear restrictions on \eqn{\alpha} and \eqn{\beta} in a CIVAR model in the following form:
\deqn{vec(\alpha') = G \psi,  vec(\beta) = H\phi + h}

example 1 (restrictions on alpha) test of exogeneity: one weakly exogenous variable
vec(alpha) is n\emph{crk x 1  vector
G          is n}crk x (n-k)\emph{crk matrix  (k is the number of weakly exogenous)
psi        (n-k)\emph{crk x 1 vector
vec(beta)  is n}crk x 1 vector
H          is n}crk x n\emph{crk identity matrix
phi        n}crk x 1 vector
h          n*crk x 1 zero matrix implying ver(beta) = phi.
(H is identity and h is zero vector implies only restrictions on alpha)

example 2 (restrictions on beta ) test of PPP
vec(alpha) is n\emph{crk x 1 vector
G          is n}crk x n\emph{crk identity matrix, implying no restriction on alpha
psi        n}crk x 1 vector
vec(beta)  n\emph{crk x 1 vector
H          n}crk x 2 matrix that picks out the elements under restrictions
two columns out of the identity matrix.
ones in a row of H and zero in the corresponding h implies non-restricted beta.
phi        2 x 1  vector
h          n*crk x 1  non zero elements in this vector together with the zero elements in
the corresponding row in H are the normalization conditions.
(H is identity and h is zero vector implies only restrictions on alpha)
}

\examples{
X = matrix(stats::rnorm(2*207),207,2)
colnames(X) = c("ex1","ex2")
res_d  = CIVARData(n=6,p=2,T=207,crk=2,type="exog1", X=as.matrix(X))
colnames(res_d$Y) =  c("w","p","U_l","r","yn","y")
res_e =  CIVARest(res=res_d)
res_e$tst$erg
res_e$tst$beta
res_e$tst$VECMS
n = 6;  crk = 2
G = diag(n*crk); G0 = G; psi = matrix(1,n*crk,1); psi0=psi;   ### No restrictions on alpha
H = diag(n*crk); H2 = H[,-seq(1,n*crk,n)];
h2 = matrix(0,n*crk,1);
h2[seq(1,n*crk,n),1] = rep(1,crk);
phi2 = matrix(1,(n-1)*crk,1)                               ### no restrictions but normalization

G0\%*\%psi0; H2\%*\%phi2+h2

ABtest = CIVARTest(res=res_d,H=H2,h=h2,phi=phi2,G=G0,Dxflag=0)
ABtest$betar
ABtest$alphar
ABtest$VECMR$coefficients
ABtest$LR
#1-pchisq(ABtest$LR,2)   ### the fourth is the used restrictions


res_d  = CIVARData(n=7,p=2,T=207,crk=2,type="const")
colnames(res_d$Y) =  c("w","p","U_l","r","yn","y","fsi")
res_e =  CIVARest(res=res_d)
res_e$tst$erg
res_e$tst$beta
res_e$tst$VECMS

n = 7;  crk = 2
G = diag(n*crk); G0 = G; psi = matrix(1,n*crk,1); psi0=psi;   ### No restrictions on alpha

H = diag(n*crk); H2 = H[,-c(1,8)]; h2 = matrix(0,n*crk,1);
h2[c(1,8),1] = c(1,1);  phi2 = matrix(1,12,1)                 ### normalization

G0\%*\%psi0; H2\%*\%phi2+h2

ABtest = CIVARTest(res=res_d,H=H2,h=h2,phi=phi2,G=G0,Dxflag=1)
ABtest$LR
ABtest$betar
ABtest$alphar
#1-pchisq(ABtest$LR,4)


}
